"""Add union and district relationship to incidents

Revision ID: 59eefc7c9318
Revises: 88b67373be75
Create Date: 2025-02-27 12:30:38.250271

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "59eefc7c9318"
down_revision = "88b67373be75"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("president_name", sa.String(), nullable=True),
        sa.Column("state", sa.String(), nullable=True),
        sa.Column("links", sa.JSON(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_unions")),
        sa.UniqueConstraint("name", "state", name="uix_name_state"),
    )
    op.create_table(
        "school_district_logos",
        sa.Column("school_district_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_district_id"],
            ["school_districts.id"],
            name=op.f("fk_school_district_logos_school_district_id_school_districts"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_school_district_logos")),
    )
    op.create_table(
        "union_files",
        sa.Column("union_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["union_id"], ["unions.id"], name=op.f("fk_union_files_union_id_unions")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_union_files")),
    )
    op.create_table(
        "union_to_school_districts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("union_id", sa.Integer(), nullable=False),
        sa.Column("district_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["district_id"],
            ["school_districts.id"],
            name=op.f("fk_union_to_school_districts_district_id_school_districts"),
        ),
        sa.ForeignKeyConstraint(
            ["union_id"],
            ["unions.id"],
            name=op.f("fk_union_to_school_districts_union_id_unions"),
        ),
        sa.PrimaryKeyConstraint(
            "id", "union_id", "district_id", name=op.f("pk_union_to_school_districts")
        ),
    )
    op.create_table(
        "related_links",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("link", sa.String(length=100), nullable=False),
        sa.Column("incident_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["incident_id"],
            ["incidents.id"],
            name=op.f("fk_related_links_incident_id_incidents"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_related_links")),
    )
    op.create_table(
        "supporting_material_files",
        sa.Column("incident_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_id"],
            ["incidents.id"],
            name=op.f("fk_supporting_material_files_incident_id_incidents"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_supporting_material_files")),
    )
    op.add_column("incidents", sa.Column("district_id", sa.Integer(), nullable=True))
    op.add_column("incidents", sa.Column("union_id", sa.Integer(), nullable=True))
    op.add_column(
        "incidents", sa.Column("reported_to_school", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "incidents",
        sa.Column("school_responded_on", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column("incidents", sa.Column("school_response", sa.Text(), nullable=True))
    op.create_foreign_key(
        op.f("fk_incidents_union_id_unions"),
        "incidents",
        "unions",
        ["union_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("fk_incidents_district_id_school_districts"),
        "incidents",
        "school_districts",
        ["district_id"],
        ["id"],
    )
    op.add_column(
        "school_districts", sa.Column("display_name", sa.String(), nullable=True)
    )
    op.add_column("school_districts", sa.Column("notes", sa.Text(), nullable=True))
    op.alter_column(
        "school_districts", "nces_id", existing_type=sa.BIGINT(), nullable=True
    )
    op.drop_constraint("uix_nces_id", "school_districts", type_="unique")
    op.create_unique_constraint(
        op.f("uq_school_districts_nces_id"), "school_districts", ["nces_id"]
    )
    op.drop_column("school_districts", "logo_url")
    op.drop_constraint("school_types_name_key", "school_types", type_="unique")
    op.create_unique_constraint(op.f("uq_school_types_name"), "school_types", ["name"])
    op.add_column("schools", sa.Column("display_name", sa.String(), nullable=True))
    op.add_column("schools", sa.Column("notes", sa.Text(), nullable=True))
    op.alter_column("schools", "nces_id", existing_type=sa.BIGINT(), nullable=True)
    op.drop_constraint("schools_nces_id_key", "schools", type_="unique")
    op.create_unique_constraint(op.f("uq_schools_nces_id"), "schools", ["nces_id"])
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.create_unique_constraint(op.f("uq_users_email"), "users", ["email"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_email"), "users", type_="unique")
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.drop_constraint(op.f("uq_schools_nces_id"), "schools", type_="unique")
    op.create_unique_constraint("schools_nces_id_key", "schools", ["nces_id"])
    op.alter_column("schools", "nces_id", existing_type=sa.BIGINT(), nullable=False)
    op.drop_column("schools", "notes")
    op.drop_column("schools", "display_name")
    op.drop_constraint(op.f("uq_school_types_name"), "school_types", type_="unique")
    op.create_unique_constraint("school_types_name_key", "school_types", ["name"])
    op.add_column(
        "school_districts",
        sa.Column("logo_url", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        op.f("uq_school_districts_nces_id"), "school_districts", type_="unique"
    )
    op.create_unique_constraint("uix_nces_id", "school_districts", ["nces_id"])
    op.alter_column(
        "school_districts", "nces_id", existing_type=sa.BIGINT(), nullable=False
    )
    op.drop_column("school_districts", "notes")
    op.drop_column("school_districts", "display_name")
    op.drop_constraint(
        op.f("fk_incidents_district_id_school_districts"),
        "incidents",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_incidents_union_id_unions"), "incidents", type_="foreignkey"
    )
    op.drop_column("incidents", "school_response")
    op.drop_column("incidents", "school_responded_on")
    op.drop_column("incidents", "reported_to_school")
    op.drop_column("incidents", "union_id")
    op.drop_column("incidents", "district_id")
    op.drop_table("supporting_material_files")
    op.drop_table("related_links")
    op.drop_table("union_to_school_districts")
    op.drop_table("union_files")
    op.drop_table("school_district_logos")
    op.drop_table("unions")
    # ### end Alembic commands ###
